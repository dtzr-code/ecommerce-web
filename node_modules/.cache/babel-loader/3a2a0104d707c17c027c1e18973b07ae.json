{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/ecommerce-web/src/components/Checkout(Stripe)/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutForm() {\n  _s();\n\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:5000/payment\", {\n          amount: 1000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {\n      id: \"card-element\",\n      options: cardStyle,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: processing || disabled || succeeded,\n      id: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: processing ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-error\",\n      role: \"alert\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: succeeded ? \"result-message\" : \"result-message hidden\",\n      children: [\"Payment succeeded, see the result in your\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://dashboard.stripe.com/test/payments`,\n        children: [\" \", \"Stripe dashboard.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), \" \", \"Refresh the page to pay again.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"6hDlQMsgCa6cRk+jdFUeEqLw/RU=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/ecommerce-web/src/components/Checkout(Stripe)/Checkout.js"],"names":["React","useState","useEffect","CardElement","useStripe","useElements","CheckoutForm","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","axios","post","amount","data","console","log","message","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleChange","processing","disabled","succeeded"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\nexport default function CheckoutForm() {\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n\n    if (!error) {\n      try {\n        const { id } = paymentMethod;\n        const response = await axios.post(\"http://localhost:5000/payment\", {\n          amount: 1000,\n          id,\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n\n  return (\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\n      <CardElement\n        id=\"card-element\"\n        options={cardStyle}\n        onChange={handleChange}\n      />\n      <button disabled={processing || disabled || succeeded} id=\"submit\">\n        <span id=\"button-text\">\n          {processing ? (\n            <div className=\"spinner\" id=\"spinner\"></div>\n          ) : (\n            \"Pay now\"\n          )}\n        </span>\n      </button>\n      {/* Show any error that happens when processing the payment */}\n      {error && (\n        <div className=\"card-error\" role=\"alert\">\n          {error}\n        </div>\n      )}\n      {/* Show a success message upon completion */}\n      <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n        Payment succeeded, see the result in your\n        <a href={`https://dashboard.stripe.com/test/payments`}>\n          {\" \"}\n          Stripe dashboard.\n        </a>{\" \"}\n        Refresh the page to pay again.\n      </p>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}