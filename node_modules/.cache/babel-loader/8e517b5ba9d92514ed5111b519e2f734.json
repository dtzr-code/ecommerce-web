{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/ecommerce-web/src/components/Signout/Signout.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Modal } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signout({\n  openModal,\n  setOpenModal\n}) {\n  _s();\n\n  function exampleReducer(state, action) {\n    switch (action.type) {\n      case 'OPEN_MODAL':\n        return {\n          open: true,\n          dimmer: action.dimmer\n        };\n\n      case 'CLOSE_MODAL':\n        return {\n          open: false\n        };\n\n      default:\n        throw new Error();\n    }\n  }\n\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    open: false,\n    dimmer: undefined\n  });\n  const {\n    open,\n    dimmer\n  } = state;\n  return /*#__PURE__*/_jsxDEV(Modal // dimmer={dimmer}\n  , {\n    open: openModal,\n    onClose: () => setOpenModal(false),\n    onOpen: () => setOpenModal(true) // onClose={() => dispatch({ type: 'CLOSE_MODAL' })}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Signout, \"Yg2Rh9yEssWbxVY+Zh+zriePiGg=\");\n\n_c = Signout;\nexport default Signout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signout\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/ecommerce-web/src/components/Signout/Signout.js"],"names":["React","Button","Modal","Signout","openModal","setOpenModal","exampleReducer","state","action","type","open","dimmer","Error","dispatch","useReducer","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,mBAA9B;;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAjB,EAA6C;AAAA;;AAE3C,WAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACrC,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,YAAL;AACE,eAAO;AAAEC,UAAAA,IAAI,EAAE,IAAR;AAAcC,UAAAA,MAAM,EAAEH,MAAM,CAACG;AAA7B,SAAP;;AACF,WAAK,aAAL;AACE,eAAO;AAAED,UAAAA,IAAI,EAAE;AAAR,SAAP;;AACF;AACE,cAAM,IAAIE,KAAJ,EAAN;AANJ;AAQD;;AAED,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBb,KAAK,CAACc,UAAN,CAAiBR,cAAjB,EAAiC;AACzDI,IAAAA,IAAI,EAAE,KADmD;AAEzDC,IAAAA,MAAM,EAAEI;AAFiD,GAAjC,CAA1B;AAKA,QAAM;AAAEL,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAmBJ,KAAzB;AAEA,sBACI,QAAC,KAAD,CACE;AADF;AAEE,IAAA,IAAI,EAAEH,SAFR;AAGE,IAAA,OAAO,EAAE,MAAMC,YAAY,CAAC,KAAD,CAH7B;AAIE,IAAA,MAAM,EAAE,MAAMA,YAAY,CAAC,IAAD,CAJ5B,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBD;;GA7CQF,O;;KAAAA,O;AA+CT,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport { Button, Modal } from 'semantic-ui-react'\n\nfunction Signout({ openModal, setOpenModal}) {\n\n  function exampleReducer(state, action) {\n    switch (action.type) {\n      case 'OPEN_MODAL':\n        return { open: true, dimmer: action.dimmer }\n      case 'CLOSE_MODAL':\n        return { open: false }\n      default:\n        throw new Error()\n    }\n  }\n\n  const [state, dispatch] = React.useReducer(exampleReducer, {\n    open: false,\n    dimmer: undefined,\n  })\n\n  const { open, dimmer } = state\n\n  return (\n      <Modal\n        // dimmer={dimmer}\n        open={openModal}\n        onClose={() => setOpenModal(false)}\n        onOpen={() => setOpenModal(true)}\n        // onClose={() => dispatch({ type: 'CLOSE_MODAL' })}\n      >\n        {/* <div>\n          <Modal.Header>Use Google's location service?</Modal.Header>\n          <Modal.Content>\n            Let Google help apps determine location. This means sending anonymous\n            location data to Google, even when no apps are running.\n          </Modal.Content>\n          <Modal.Actions>\n            <Button negative onClick={setOpenModal(false)}>\n              Disagree\n            </Button>\n            <Button positive onClick={setOpenModal(false)}>\n              Agree\n            </Button>\n          </Modal.Actions>\n        </div> */}\n      </Modal>\n  )\n}\n\nexport default Signout\n\n"]},"metadata":{},"sourceType":"module"}