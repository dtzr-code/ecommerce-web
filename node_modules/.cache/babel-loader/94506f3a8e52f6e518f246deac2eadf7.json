{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/ecommerce-web/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { removeFromCart, selectItems, selectTotal } from \"../../slices/cartSlice\";\nimport { selectUser } from \"../../slices/userSlice\";\nimport Signin from \"../Signin/Signin\";\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(`${process.env.PUBLISHABLE_KEY}`);\n\nfunction Cart({\n  open,\n  setOpen\n}) {\n  _s();\n\n  //To display cart items\n  const items = useSelector(selectItems); //To display total price\n\n  const total = useSelector(selectTotal); //To remove item from cart\n\n  const dispatch = useDispatch();\n\n  const removeItem = id => {\n    dispatch(removeFromCart({\n      id\n    }));\n  }; //For logging out\n\n\n  const user = useSelector(selectUser); //Showing sign in modal --> in order to checkout\n\n  const [openModal, setOpenModal] = useState(false);\n\n  const showModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    } // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n\n\n    const cardElement = elements.getElement(CardElement); // Use your card Element with other Stripe.js APIs\n\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement\n    });\n\n    if (error) {\n      console.log(\"[error]\", error);\n    } else {\n      console.log(\"[PaymentMethod]\", paymentMethod);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart__header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Your Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"close--icon\",\n            onClick: () => setOpen(!open),\n            children: [\" \", \"x\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item--wrapper\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single__product--wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"product_img\",\n              src: item.image,\n              alt: \"product_img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"product__details\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"product_name\",\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"product_price\",\n                children: [\" $\", item.price, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"product__settings\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"product__counter\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"cart__button\",\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"1\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"cart__button\",\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  onClick: () => removeItem(item.id),\n                  children: \"REMOVE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"product__price\",\n              children: item.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"subtotal\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Sub-total: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"$\", total]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: user ? null : () => showModal(),\n          className: \"checkout--button\",\n          children: user ? \"Checkout\" : \"Sign In To Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), openModal ? /*#__PURE__*/_jsxDEV(Signin, {\n          openModal: openModal,\n          setOpenModal: setOpenModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CardElement, {\n          options: {\n            style: {\n              base: {\n                fontSize: \"16px\",\n                color: \"#424770\",\n                \"::placeholder\": {\n                  color: \"#aab7c4\"\n                }\n              },\n              invalid: {\n                color: \"#9e2146\"\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), \"        \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cart, \"DuZmZW6ojp3g/BqlMjPDJ19AfYw=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector, useStripe, useElements];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/ecommerce-web/src/components/Cart/Cart.js"],"names":["React","useEffect","useState","useDispatch","useSelector","removeFromCart","selectItems","selectTotal","selectUser","Signin","CardElement","Elements","useElements","useStripe","loadStripe","stripePromise","process","env","PUBLISHABLE_KEY","Cart","open","setOpen","items","total","dispatch","removeItem","id","user","openModal","setOpenModal","showModal","stripe","elements","handleSubmit","event","preventDefault","cardElement","getElement","error","paymentMethod","createPaymentMethod","type","card","console","log","map","item","image","name","price","style","base","fontSize","color","invalid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./styles.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  removeFromCart,\n  selectItems,\n  selectTotal,\n} from \"../../slices/cartSlice\";\nimport { selectUser } from \"../../slices/userSlice\";\nimport Signin from \"../Signin/Signin\";\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst stripePromise = loadStripe(`${process.env.PUBLISHABLE_KEY}`);\n\nfunction Cart({ open, setOpen }) {\n  //To display cart items\n  const items = useSelector(selectItems);\n\n  //To display total price\n  const total = useSelector(selectTotal);\n\n  //To remove item from cart\n  const dispatch = useDispatch();\n\n  const removeItem = (id) => {\n    dispatch(removeFromCart({ id }));\n  };\n\n  //For logging out\n  const user = useSelector(selectUser);\n\n  //Showing sign in modal --> in order to checkout\n  const [openModal, setOpenModal] = useState(false);\n\n  const showModal = () => {\n    setOpenModal(!openModal);\n  };\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    // Block native form submission.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not loaded yet. Make sure to disable\n      // form submission until Stripe.js has loaded.\n      return;\n    }\n\n    // Get a reference to a mounted CardElement. Elements knows how\n    // to find your CardElement because there can only ever be one of\n    // each type of element.\n    const cardElement = elements.getElement(CardElement);\n\n    // Use your card Element with other Stripe.js APIs\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: cardElement,\n    });\n\n    if (error) {\n      console.log(\"[error]\", error);\n    } else {\n      console.log(\"[PaymentMethod]\", paymentMethod);\n    }\n  };\n\n  return (\n    <Elements stripe={stripePromise}>\n\n    <div className=\"cart__container\">\n      <div className=\"cart__wrapper\">\n        <div className=\"cart__header\">\n          <h1>Your Cart</h1>\n          <p className=\"close--icon\" onClick={() => setOpen(!open)}>\n            {\" \"}\n            x\n          </p>\n        </div>\n\n        {/* Cart Items */}\n        <div className=\"item--wrapper\">\n          {items.map((item) => (\n            <div className=\"single__product--wrapper\" key={item.id}>\n              <img className=\"product_img\" src={item.image} alt=\"product_img\" />\n              <div className=\"product__details\">\n                <p className=\"product_name\">{item.name}</p>\n                <p className=\"product_price\"> ${item.price} </p>\n                <div className=\"product__settings\">\n                  <div className=\"product__counter\">\n                    <button className=\"cart__button\">-</button>\n                    <p>1</p>\n                    <button className=\"cart__button\">+</button>\n                  </div>\n                  <p onClick={() => removeItem(item.id)}>REMOVE</p>\n                </div>\n              </div>\n              <h2 className=\"product__price\">{item.price}</h2>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"subtotal\">\n          <p>Sub-total: </p>\n          <p>${total}</p>\n        </div>\n\n        {/* Checkout button */}\n          <button\n            onClick={user ? null : () => showModal()}\n            className=\"checkout--button\"\n          >\n            {user ? \"Checkout\" : \"Sign In To Checkout\"}\n          </button>\n          {openModal ? (\n            <Signin openModal={openModal} setOpenModal={setOpenModal} />\n          ) : (\n            <CardElement\n              options={{\n                style: {\n                  base: {\n                    fontSize: \"16px\",\n                    color: \"#424770\",\n                    \"::placeholder\": {\n                      color: \"#aab7c4\",\n                    },\n                  },\n                  invalid: {\n                    color: \"#9e2146\",\n                  },\n                },\n              }}\n            />\n          )}\n      </div>\n    </div>        </Elements>\n\n  );\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}