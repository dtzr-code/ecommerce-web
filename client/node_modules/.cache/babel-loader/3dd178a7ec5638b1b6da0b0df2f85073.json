{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/ecommerce-web/client/src/pages/Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Hero from \"../components/Hero/Hero\";\nimport Popular from \"../components/Popular/Popular\";\nimport { auth } from \"../firebase\";\nimport { login, logout } from \"../slices/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Homepage() {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        //logged in\n        dispatch(login({\n          uid: userAuth.uid,\n          email: userAuth.email\n        }));\n      } else {\n        //logged out\n        dispatch(logout());\n      }\n    }); //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n\n    return unsubscribe;\n  }, [dispatch, auth]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page--container\",\n    style: {\n      backgroundColor: \"black\",\n      height: \"auto\",\n      width: '100vw',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Hero, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popular, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Homepage, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/ecommerce-web/client/src/pages/Homepage.js"],"names":["React","useEffect","useDispatch","Hero","Popular","auth","login","logout","Homepage","dispatch","unsubscribe","onAuthStateChanged","userAuth","uid","email","backgroundColor","height","width","minHeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,qBAA9B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,UAAMS,WAAW,GAAGL,IAAI,CAACM,kBAAL,CAAyBC,QAAD,IAAc;AACxD,UAAIA,QAAJ,EAAc;AACZ;AACAH,QAAAA,QAAQ,CACNH,KAAK,CAAC;AACJO,UAAAA,GAAG,EAAED,QAAQ,CAACC,GADV;AAEJC,UAAAA,KAAK,EAAEF,QAAQ,CAACE;AAFZ,SAAD,CADC,CAAR;AAMD,OARD,MAQO;AACL;AACAL,QAAAA,QAAQ,CAACF,MAAM,EAAP,CAAR;AACD;AACF,KAbmB,CAApB,CAHc,CAiBd;AACA;;AACA,WAAOG,WAAP;AACD,GApBQ,EAoBN,CAACD,QAAD,EAAWJ,IAAX,CApBM,CAAT;AAsBA,sBACE;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,KAAK,EAAE;AAAEU,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,MAAM,EAAE,MAApC;AAA4CC,MAAAA,KAAK,EAAE,OAAnD;AACPC,MAAAA,SAAS,EAAE;AADJ,KAFT;AAAA,4BAKE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAnCuBV,Q;UACLN,W;;;KADKM,Q","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Hero from \"../components/Hero/Hero\";\nimport Popular from \"../components/Popular/Popular\";\nimport { auth } from \"../firebase\";\nimport { login, logout } from \"../slices/userSlice\";\n\nexport default function Homepage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        //logged in\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n        );\n      } else {\n        //logged out\n        dispatch(logout());\n      }\n    });\n    //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n    return unsubscribe;\n  }, [dispatch, auth]);\n\n  return (\n    <div\n      className=\"page--container\"\n      style={{ backgroundColor: \"black\", height: \"auto\" ,width: '100vw',\n      minHeight: '100vh'}}\n    >\n      <Hero />\n      <Popular />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}