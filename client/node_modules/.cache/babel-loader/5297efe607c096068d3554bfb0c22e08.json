{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/ecommerce-web/client/src/components/Checkout/PaymentForm.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectItems } from \"../../slices/cartSlice\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": {\n        color: \"#fce883\"\n      },\n      \"::placeholder\": {\n        color: \"#87bbfd\"\n      }\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\"\n    }\n  }\n};\nexport default function PaymentForm() {\n  _s();\n\n  const items = useSelector(selectItems);\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      try {\n        const {\n          id\n        } = paymentMethod;\n        const response = await axios.post(\"http://localhost:5000/create-checkout-session\", {\n          items: items,\n          amount: 1000,\n          id\n        });\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"checkout--form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"You just bought a sweet spatula congrats this is the best decision of you're life\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PaymentForm, \"idtzMQ8lOq1atI+4vFGL1sLYAwI=\", false, function () {\n  return [useSelector, useStripe, useElements];\n});\n\n_c = PaymentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/ecommerce-web/client/src/components/Checkout/PaymentForm.js"],"names":["CardElement","useElements","useStripe","axios","React","useState","useSelector","selectItems","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","items","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","response","post","amount","data","console","log","message"],"mappings":"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","sourcesContent":["import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectItems } from \"../../slices/cartSlice\";\nimport \"./styles.css\";\n\nconst CARD_OPTIONS = {\n  iconStyle: \"solid\",\n  style: {\n    base: {\n      iconColor: \"#c4f0ff\",\n      color: \"#fff\",\n      fontWeight: 500,\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n      fontSize: \"16px\",\n      fontSmoothing: \"antialiased\",\n      \":-webkit-autofill\": { color: \"#fce883\" },\n      \"::placeholder\": { color: \"#87bbfd\" },\n    },\n    invalid: {\n      iconColor: \"#ffc7ee\",\n      color: \"#ffc7ee\",\n    },\n  },\n};\n\nexport default function PaymentForm() {\n  const items = useSelector(selectItems);\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n\n    if (!error) {\n      try {\n        const { id } = paymentMethod;\n        const response = await axios.post(\n          \"http://localhost:5000/create-checkout-session\",\n          {\n            items: items,\n            amount: 1000,\n            id,\n          }\n        );\n\n        if (response.data.success) {\n          console.log(\"Successful payment\");\n          setSuccess(true);\n        }\n      } catch (error) {\n        console.log(\"Error\", error);\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return (\n    <>\n      {!success ? (\n        <form className=\"checkout--form\" onSubmit={handleSubmit}>\n          <fieldset className=\"FormGroup\">\n            <div className=\"FormRow\">\n              <CardElement options={CARD_OPTIONS} />\n            </div>\n          </fieldset>\n          <button>Pay</button>\n        </form>\n      ) : (\n        <div>\n          <h2>\n            You just bought a sweet spatula congrats this is the best decision\n            of you're life\n          </h2>\n        </div>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}