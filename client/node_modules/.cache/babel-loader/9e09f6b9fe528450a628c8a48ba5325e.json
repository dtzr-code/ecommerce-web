{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/ecommerce-web/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./App.css\";\nimport { auth } from \"./firebase\";\nimport Homepage from \"./pages/Homepage\";\nimport { login, logout } from \"./slices/userSlice\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        //logged in\n        dispatch(login({\n          uid: userAuth.uid,\n          email: userAuth.email\n        }));\n      } else {\n        //logged out\n        dispatch(logout());\n      }\n    }); //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n\n    return unsubscribe;\n  }, [dispatch, auth]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/create-checkout-session\",\n        children: /*#__PURE__*/_jsxDEV(Checkout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/ecommerce-web/client/src/App.js"],"names":["useEffect","useDispatch","auth","Homepage","login","logout","BrowserRouter","Router","Switch","Route","Checkout","App","dispatch","unsubscribe","onAuthStateChanged","userAuth","uid","email"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,WAAP;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,oBAA9B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,QAAP,MAAqB,IAArB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,UAAMa,WAAW,GAAGX,IAAI,CAACY,kBAAL,CAAyBC,QAAD,IAAc;AACxD,UAAIA,QAAJ,EAAc;AACZ;AACAH,QAAAA,QAAQ,CACNR,KAAK,CAAC;AACJY,UAAAA,GAAG,EAAED,QAAQ,CAACC,GADV;AAEJC,UAAAA,KAAK,EAAEF,QAAQ,CAACE;AAFZ,SAAD,CADC,CAAR;AAMD,OARD,MAQO;AACL;AACAL,QAAAA,QAAQ,CAACP,MAAM,EAAP,CAAR;AACD;AACF,KAbmB,CAApB,CAHc,CAkBd;AACA;;AACA,WAAOQ,WAAP;AACD,GArBQ,EAqBN,CAACD,QAAD,EAAWV,IAAX,CArBM,CAAT;AAuBA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,0BAAlB;AAAA,+BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAtCQS,G;UACUV,W;;;KADVU,G;AAwCT,eAAeA,GAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport \"./App.css\";\nimport { auth } from \"./firebase\";\nimport Homepage from \"./pages/Homepage\";\nimport { login, logout } from \"./slices/userSlice\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./\"\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth) {\n        //logged in\n        dispatch(\n          login({\n            uid: userAuth.uid,\n            email: userAuth.email,\n          })\n        );\n      } else {\n        //logged out\n        dispatch(logout());\n      }\n    });\n\n    //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n    return unsubscribe;\n  }, [dispatch, auth]);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <Homepage />\n        </Route>\n        <Route exact path=\"/create-checkout-session\">\n          <Checkout/>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}